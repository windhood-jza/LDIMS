map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# 重定向HTTP到HTTPS (如果HTTPS_ENABLED=true)
server {
    listen ${NGINX_PORT};
    server_name ${NGINX_SERVER_NAME};

    # 如果启用了HTTPS，则将所有HTTP流量重定向到HTTPS
    set $should_redirect 0;
    if ($https_enabled = "true") {
        set $should_redirect 1;
    }
    if ($scheme = "http") {
        set $should_redirect "${should_redirect}1";
    }
    if ($should_redirect = "11") {
        return 301 https://$host$request_uri;
    }

    # 如果未启用HTTPS，则直接提供HTTP内容
    location / {
        proxy_pass http://${FRONTEND_HOST}:${FRONTEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
    }

    # API路由代理到后端服务
    location /api/ {
        proxy_pass http://${BACKEND_HOST}:${BACKEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
    }
}

# HTTPS服务器配置 (仅当HTTPS_ENABLED=true时有效)
server {
    listen ${NGINX_SSL_PORT} ssl http2;
    server_name ${NGINX_SERVER_NAME};

    # SSL配置
    ssl_certificate /etc/nginx/ssl/${NGINX_SSL_CERT};
    ssl_certificate_key /etc/nginx/ssl/${NGINX_SSL_KEY};
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_timeout 10m;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # 安全头部
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "same-origin" always;

    # 主页面路由到前端
    location / {
        proxy_pass http://${FRONTEND_HOST}:${FRONTEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
    }

    # API路由代理到后端服务
    location /api/ {
        proxy_pass http://${BACKEND_HOST}:${BACKEND_PORT};
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket支持
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        
        client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
    }
} 