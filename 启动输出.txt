Attaching to ldims_backend, ldims_db, ldims_frontend, ldims_nginx, ldims_redis, ldims_worker
ldims_db        | 2025-05-19 06:58:38+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.42-1.el9 started.
ldims_redis     | 1:C 19 May 2025 06:58:38.432 # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Oo
ldims_redis     | 1:C 19 May 2025 06:58:38.432 # Redis version=6.2.18, bits=64, commit=00000000, modified=0, pid=1, just started
ldims_redis     | 1:C 19 May 2025 06:58:38.432 # Configuration loaded
ldims_redis     | 1:M 19 May 2025 06:58:38.434 * monotonic clock: POSIX clock_gettime
ldims_redis     | 1:M 19 May 2025 06:58:38.437 * Running mode=standalone, port=6379.
ldims_redis     | 1:M 19 May 2025 06:58:38.437 # Server initialized
ldims_redis     | 1:M 19 May 2025 06:58:38.587 * DB loaded from append only file: 0.149 seconds
ldims_redis     | 1:M 19 May 2025 06:58:38.587 * Ready to accept connections
ldims_frontend exited with code 0
ldims_db        | 2025-05-19 06:58:39+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
ldims_db        | 2025-05-19 06:58:39+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 8.0.42-1.el9 started.
ldims_db        | '/var/lib/mysql/mysql.sock' -> '/var/run/mysqld/mysqld.sock'
ldims_db        | 2025-05-19T06:58:39.656407Z 0 [Warning] [MY-011068] [Server] The syntax '--skip-host-cache' is deprecated and will be removed in a future release. Please use SET GLOBAL host_cache_size=0 instead.
ldims_db        | 2025-05-19T06:58:39.662537Z 0 [System] [MY-010116] [Server] /usr/sbin/mysqld (mysqld 8.0.42) starting as process 1
ldims_db        | 2025-05-19T06:58:39.668990Z 0 [Warning] [MY-010159] [Server] Setting lower_case_table_names=2 because file system for /var/lib/mysql/ is case insensitive
ldims_db        | 2025-05-19T06:58:39.750864Z 1 [System] [MY-013576] [InnoDB] InnoDB initialization has started.
ldims_db        | 2025-05-19T06:58:44.497591Z 1 [System] [MY-013577] [InnoDB] InnoDB initialization has ended.
ldims_db        | 2025-05-19T06:58:46.754834Z 0 [Warning] [MY-010068] [Server] CA certificate ca.pem is self signed.
ldims_db        | 2025-05-19T06:58:46.755355Z 0 [System] [MY-013602] [Server] Channel mysql_main configured to support TLS. Encrypted connections are now supported for this channel.
ldims_db        | 2025-05-19T06:58:46.771938Z 0 [Warning] [MY-011810] [Server] Insecure configuration for --pid-file: Location '/var/run/mysqld' in the path is accessible to all OS users. Consider choosing a different directory.
ldims_db        | 2025-05-19T06:58:46.866337Z 0 [System] [MY-011323] [Server] X Plugin ready for connections. Bind-address: '::' port: 33060, socket: /var/run/mysqld/mysqlx.sock
ldims_db        | 2025-05-19T06:58:46.866501Z 0 [System] [MY-010931] [Server] /usr/sbin/mysqld: ready for connections. Version: '8.0.42'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  MySQL Community Server - GPL.
ldims_nginx     | ---> docker-entrypoint.sh: Script started.
ldims_nginx     | ---> docker-entrypoint.sh: Value of HTTPS_ENABLED is [false]
ldims_nginx     | ---> docker-entrypoint.sh: nginx.conf.template found.
ldims_nginx     | ---> docker-entrypoint.sh: Verifying template markers (lines around HTTPS block):
ldims_nginx     |
ldims_nginx     |             client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
ldims_nginx     |         }
ldims_nginx     |     }
ldims_nginx     |
ldims_nginx     |     # START_HTTPS_BLOCK
ldims_nginx     |     # HTTPS服务器配置 (仅当HTTPS_ENABLED=true时有效)
ldims_nginx     |     server {
ldims_worker    |
ldims_backend   |
ldims_nginx     |         listen ${NGINX_SSL_PORT} ssl http2;
ldims_worker    | > ldims-backend@1.0.0 start:worker
ldims_backend   | > ldims-backend@1.0.0 start
ldims_nginx     |         server_name ${NGINX_SERVER_NAME};
ldims_worker    | > node dist/workers/contentExtractionWorker.js
ldims_backend   | > node dist/app.js
ldims_nginx     |
ldims_worker    |
ldims_backend   |
ldims_nginx     |             proxy_set_header Connection ${DOLLAR}connection_upgrade;
ldims_worker    | Redis config loaded: host=redis, port=6379, password provided=true
ldims_nginx     |
ldims_worker    | BullMQ queue 'content-extraction' initialized.
ldims_nginx     |             client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
ldims_worker    | [Worker] Setting up content extraction worker with concurrency: 15
ldims_nginx     |         }

ldims_nginx     |     }
ldims_worker    | Ignoring invalid configuration option passed to Connection: options. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
ldims_nginx     |     # END_HTTPS_BLOCK
ldims_worker    | Ignoring invalid configuration option passed to Connection: options. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
ldims_backend   | Redis config loaded: host=redis, port=6379, password provided=true
ldims_nginx     | }
ldims_worker    | 数据库连接成功
ldims_backend   | BullMQ queue 'content-extraction' initialized.
ldims_nginx     | ---> docker-entrypoint.sh: HTTPS_ENABLED is NOT 'true' (it is [false]). Attempting to remove HTTPS block with sed.
ldims_nginx     | ---> docker-entrypoint.sh: Running sed command with simplified pattern...
ldims_nginx     | ---> docker-entrypoint.sh: sed command finished. Content of /tmp/nginx.conf.processed_by_sed follows:
ldims_nginx     | user nginx;
ldims_nginx     | worker_processes auto;
ldims_nginx     | pid /run/nginx.pid;
ldims_backend   | [App] ImportService injected into TaskQueueService.
ldims_nginx     |
ldims_backend   | [Router] API router created and mounted.
ldims_nginx     | events {
ldims_backend   | 服务器运行在端口 3000
ldims_nginx     |     worker_connections 1024;
ldims_backend   | Ignoring invalid configuration option passed to Connection: options. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
ldims_nginx     | }
ldims_backend   | Ignoring invalid configuration option passed to Connection: options. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
ldims_nginx     |
ldims_backend   | Ignoring invalid configuration option passed to Connection: options. This is currently a warning, but in future versions of MySQL2, an error will be thrown if you pass an invalid configuration option to a Connection
ldims_nginx     | http {
ldims_backend   | 数据库连接成功
ldims_nginx     |     include       /etc/nginx/mime.types;
ldims_backend   | 数据库连接成功
ldims_nginx     |     default_type  application/octet-stream;
ldims_backend   | 初始化数据库连接成功
ldims_nginx     |
ldims_nginx     |     log_format  main  '${DOLLAR}remote_addr - ${DOLLAR}remote_user [${DOLLAR}time_local] "${DOLLAR}request" '
ldims_nginx     |                       '${DOLLAR}status ${DOLLAR}body_bytes_sent "${DOLLAR}http_referer" '
ldims_nginx     |                       '"${DOLLAR}http_user_agent" "${DOLLAR}http_x_forwarded_for"';
ldims_nginx     |
ldims_nginx     |     access_log  /var/log/nginx/access.log  main;
ldims_nginx     |     error_log   /var/log/nginx/error.log;
ldims_nginx     |
ldims_nginx     |     sendfile        on;
ldims_nginx     |     keepalive_timeout  65;
ldims_nginx     |
ldims_nginx     |     # WebSocket支持
ldims_nginx     |     map ${DOLLAR}http_upgrade ${DOLLAR}connection_upgrade {
ldims_nginx     |         default upgrade;
ldims_nginx     |         ''      close;
ldims_nginx     |     }
ldims_nginx     |
ldims_nginx     |     # HSTS映射
ldims_nginx     |     map ${DOLLAR}scheme ${DOLLAR}hsts_header {
ldims_nginx     |         https   "max-age=63072000; preload";
ldims_nginx     |     }
ldims_nginx     |
ldims_nginx     |     # 增加变量哈希表大小
ldims_nginx     |     variables_hash_max_size 2048;
ldims_nginx     |     variables_hash_bucket_size 128;
ldims_nginx     |
ldims_nginx     |     server {
ldims_nginx     |         listen ${NGINX_PORT};
ldims_nginx     |         server_name ${NGINX_SERVER_NAME};
ldims_nginx     |
ldims_nginx     |         # HTTPS重定向（安全写法）
ldims_nginx     |         set ${DOLLAR}https_enabled "${HTTPS_ENABLED}";
ldims_nginx     |         set ${DOLLAR}redirect_flag "${DOLLAR}https_enabled${DOLLAR}scheme";
ldims_nginx     |         if (${DOLLAR}redirect_flag = "truehttp") {
ldims_nginx     |             return 301 https://${DOLLAR}host${DOLLAR}request_uri;
ldims_nginx     |         }
ldims_nginx     |
ldims_nginx     |         # 如果未启用HTTPS，则直接提供HTTP内容
ldims_nginx     |         location / {
ldims_nginx     |             root   /usr/share/nginx/html; # 指向挂载的静态文件目录
ldims_nginx     |             try_files ${DOLLAR}uri ${DOLLAR}uri/ /index.html; # 处理单页应用路由
ldims_nginx     |             client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
ldims_nginx     |         }
ldims_nginx     |
ldims_nginx     |         # API路由代理到后端服务
ldims_nginx     |         location /api/ {
ldims_nginx     |             proxy_pass http://${BACKEND_HOST}:${BACKEND_PORT};
ldims_nginx     |             proxy_set_header Host ${DOLLAR}host;
ldims_nginx     |             proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
ldims_nginx     |             proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
ldims_nginx     |             proxy_set_header X-Forwarded-Proto ${DOLLAR}scheme;
ldims_nginx     |
ldims_nginx     |             # WebSocket支持
ldims_nginx     |             proxy_http_version 1.1;
ldims_nginx     |             proxy_set_header Upgrade ${DOLLAR}http_upgrade;
ldims_nginx     |             proxy_set_header Connection ${DOLLAR}connection_upgrade;
ldims_nginx     |
ldims_nginx     |             client_max_body_size ${NGINX_CLIENT_MAX_BODY_SIZE};
ldims_nginx     |         }
ldims_nginx     |     }
ldims_nginx     |
ldims_nginx     | } ---> docker-entrypoint.sh: End of /tmp/nginx.conf.processed_by_sed content.
ldims_nginx     | ---> docker-entrypoint.sh: Piping sed output to envsubst...
ldims_nginx     | ---> docker-entrypoint.sh: envsubst finished.
ldims_nginx     | ---> docker-entrypoint.sh: default.conf.template found. Processing.
ldims_nginx     | ---> docker-entrypoint.sh: Configuration generation finished. Starting Nginx.